;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sqs/api
  (:use)
  (:nicknames #:aws/sqs)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sqs/api)
(common-lisp:progn
 (common-lisp:defclass sqs-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "sqs" :protocol :query))
 (common-lisp:export 'sqs-request))
(common-lisp:progn
 (common-lisp:define-condition sqs-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sqs-error))
(common-lisp:defvar *error-map*
  '(("BatchEntryIdsNotDistinct" . batch-entry-ids-not-distinct)
    ("BatchRequestTooLong" . batch-request-too-long)
    ("EmptyBatchRequest" . empty-batch-request)
    ("InvalidAttributeName" . invalid-attribute-name)
    ("InvalidBatchEntryId" . invalid-batch-entry-id)
    ("InvalidIdFormat" . invalid-id-format)
    ("InvalidMessageContents" . invalid-message-contents)
    ("MessageNotInflight" . message-not-inflight) ("OverLimit" . over-limit)
    ("PurgeQueueInProgress" . purge-queue-in-progress)
    ("QueueDeletedRecently" . queue-deleted-recently)
    ("QueueDoesNotExist" . queue-does-not-exist)
    ("QueueNameExists" . queue-name-exists)
    ("ReceiptHandleIsInvalid" . receipt-handle-is-invalid)
    ("TooManyEntriesInBatchRequest" . too-many-entries-in-batch-request)
    ("UnsupportedOperation" . unsupported-operation)))
(common-lisp:progn
 (common-lisp:deftype awsaccount-id-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-awsaccount-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype action-name-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-action-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass add-permission-request common-lisp:nil
                       ((actions :initarg :actions :type
                         (common-lisp:or action-name-list common-lisp:null)
                         :accessor %add-permission-request-actions :initform
                         (common-lisp:error ":actions is required"))
                        (awsaccount-ids :initarg :awsaccount-ids :type
                         (common-lisp:or awsaccount-id-list common-lisp:null)
                         :accessor %add-permission-request-awsaccount-ids
                         :initform
                         (common-lisp:error ":awsaccount-ids is required"))
                        (label :initarg :label :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-permission-request-label :initform
                         (common-lisp:error ":label is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %add-permission-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'add-permission-request 'make-add-permission-request))
 (common-lisp:defun make-add-permission-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key actions awsaccount-ids label queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'add-permission-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awsaccount-ids))
      (common-lisp:list
       (common-lisp:cons "AWSAccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "Actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attribute-name-list ()
   '(trivial-types:proper-list queue-attribute-name))
 (common-lisp:defun |make-attribute-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list queue-attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition batch-entry-ids-not-distinct
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'batch-entry-ids-not-distinct)))
(common-lisp:progn
 (common-lisp:define-condition batch-request-too-long
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'batch-request-too-long)))
(common-lisp:progn
 (common-lisp:defclass batch-result-error-entry common-lisp:nil
                       ((message :initarg :message :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %batch-result-error-entry-message :initform
                         common-lisp:nil)
                        (code :initarg :code :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %batch-result-error-entry-code :initform
                         (common-lisp:error ":code is required"))
                        (sender-fault :initarg :sender-fault :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         %batch-result-error-entry-sender-fault :initform
                         (common-lisp:error ":sender-fault is required"))
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %batch-result-error-entry-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'batch-result-error-entry 'make-batch-result-error-entry))
 (common-lisp:defun make-batch-result-error-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message code sender-fault id)
   (common-lisp:apply #'common-lisp:make-instance 'batch-result-error-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-result-error-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-result-error-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-fault))
      (common-lisp:list
       (common-lisp:cons "SenderFault"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "Code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-result-error-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-result-error-entry-list ()
   '(trivial-types:proper-list batch-result-error-entry))
 (common-lisp:defun |make-batch-result-error-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-result-error-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype binary ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:deftype binary-list () '(trivial-types:proper-list binary))
 (common-lisp:defun |make-binary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list binary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype boxed-integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass change-message-visibility-batch-request common-lisp:nil
                       ((entries :initarg :entries :type
                         (common-lisp:or
                          change-message-visibility-batch-request-entry-list
                          common-lisp:null)
                         :accessor
                         %change-message-visibility-batch-request-entries
                         :initform (common-lisp:error ":entries is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %change-message-visibility-batch-request-queue-url
                         :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'change-message-visibility-batch-request
                    'make-change-message-visibility-batch-request))
 (common-lisp:defun make-change-message-visibility-batch-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key entries queue-url)
   (common-lisp:apply #'common-lisp:make-instance
                      'change-message-visibility-batch-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass change-message-visibility-batch-request-entry
                       common-lisp:nil
                       ((visibility-timeout :initarg :visibility-timeout :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %change-message-visibility-batch-request-entry-visibility-timeout
                         :initform common-lisp:nil)
                        (receipt-handle :initarg :receipt-handle :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %change-message-visibility-batch-request-entry-receipt-handle
                         :initform
                         (common-lisp:error ":receipt-handle is required"))
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %change-message-visibility-batch-request-entry-id
                         :initform (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'change-message-visibility-batch-request-entry
                    'make-change-message-visibility-batch-request-entry))
 (common-lisp:defun make-change-message-visibility-batch-request-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key visibility-timeout receipt-handle id)
   (common-lisp:apply #'common-lisp:make-instance
                      'change-message-visibility-batch-request-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-request-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-request-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receipt-handle))
      (common-lisp:list
       (common-lisp:cons "ReceiptHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visibility-timeout))
      (common-lisp:list
       (common-lisp:cons "VisibilityTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-request-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype change-message-visibility-batch-request-entry-list ()
   '(trivial-types:proper-list change-message-visibility-batch-request-entry))
 (common-lisp:defun |make-change-message-visibility-batch-request-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            change-message-visibility-batch-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass change-message-visibility-batch-result common-lisp:nil
                       ((failed :initarg :failed :type
                         (common-lisp:or batch-result-error-entry-list
                                         common-lisp:null)
                         :accessor
                         %change-message-visibility-batch-result-failed
                         :initform (common-lisp:error ":failed is required"))
                        (successful :initarg :successful :type
                         (common-lisp:or
                          change-message-visibility-batch-result-entry-list
                          common-lisp:null)
                         :accessor
                         %change-message-visibility-batch-result-successful
                         :initform
                         (common-lisp:error ":successful is required"))))
 (common-lisp:export
  (common-lisp:list 'change-message-visibility-batch-result
                    'make-change-message-visibility-batch-result))
 (common-lisp:defun make-change-message-visibility-batch-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failed successful)
   (common-lisp:apply #'common-lisp:make-instance
                      'change-message-visibility-batch-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful))
      (common-lisp:list
       (common-lisp:cons "Successful"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed))
      (common-lisp:list
       (common-lisp:cons "Failed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass change-message-visibility-batch-result-entry
                       common-lisp:nil
                       ((id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %change-message-visibility-batch-result-entry-id
                         :initform (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'change-message-visibility-batch-result-entry
                    'make-change-message-visibility-batch-result-entry))
 (common-lisp:defun make-change-message-visibility-batch-result-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id)
   (common-lisp:apply #'common-lisp:make-instance
                      'change-message-visibility-batch-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-batch-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype change-message-visibility-batch-result-entry-list ()
   '(trivial-types:proper-list change-message-visibility-batch-result-entry))
 (common-lisp:defun |make-change-message-visibility-batch-result-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            change-message-visibility-batch-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass change-message-visibility-request common-lisp:nil
                       ((visibility-timeout :initarg :visibility-timeout :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %change-message-visibility-request-visibility-timeout
                         :initform
                         (common-lisp:error ":visibility-timeout is required"))
                        (receipt-handle :initarg :receipt-handle :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %change-message-visibility-request-receipt-handle
                         :initform
                         (common-lisp:error ":receipt-handle is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %change-message-visibility-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'change-message-visibility-request
                    'make-change-message-visibility-request))
 (common-lisp:defun make-change-message-visibility-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key visibility-timeout receipt-handle
                     queue-url)
   (common-lisp:apply #'common-lisp:make-instance
                      'change-message-visibility-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receipt-handle))
      (common-lisp:list
       (common-lisp:cons "ReceiptHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visibility-timeout))
      (common-lisp:list
       (common-lisp:cons "VisibilityTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          change-message-visibility-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-queue-request common-lisp:nil
                       ((tags :initarg :|tags| :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %create-queue-request-tags :initform common-lisp:nil)
                        (attributes :initarg :attributes :type
                         (common-lisp:or queue-attribute-map common-lisp:null)
                         :accessor %create-queue-request-attributes :initform
                         common-lisp:nil)
                        (queue-name :initarg :queue-name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-queue-request-queue-name :initform
                         (common-lisp:error ":queue-name is required"))))
 (common-lisp:export
  (common-lisp:list 'create-queue-request 'make-create-queue-request))
 (common-lisp:defun make-create-queue-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags attributes queue-name)
   (common-lisp:apply #'common-lisp:make-instance 'create-queue-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-name))
      (common-lisp:list
       (common-lisp:cons "QueueName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-queue-result common-lisp:nil
                       ((queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %create-queue-result-queue-url :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-queue-result 'make-create-queue-result))
 (common-lisp:defun make-create-queue-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'create-queue-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-queue-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-queue-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-queue-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-message-batch-request common-lisp:nil
                       ((entries :initarg :entries :type
                         (common-lisp:or
                          delete-message-batch-request-entry-list
                          common-lisp:null)
                         :accessor %delete-message-batch-request-entries
                         :initform (common-lisp:error ":entries is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-message-batch-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-message-batch-request
                    'make-delete-message-batch-request))
 (common-lisp:defun make-delete-message-batch-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key entries queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'delete-message-batch-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-message-batch-request-entry common-lisp:nil
                       ((receipt-handle :initarg :receipt-handle :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-message-batch-request-entry-receipt-handle
                         :initform
                         (common-lisp:error ":receipt-handle is required"))
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-message-batch-request-entry-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-message-batch-request-entry
                    'make-delete-message-batch-request-entry))
 (common-lisp:defun make-delete-message-batch-request-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key receipt-handle id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-message-batch-request-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-request-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-request-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receipt-handle))
      (common-lisp:list
       (common-lisp:cons "ReceiptHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-request-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype delete-message-batch-request-entry-list ()
   '(trivial-types:proper-list delete-message-batch-request-entry))
 (common-lisp:defun |make-delete-message-batch-request-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            delete-message-batch-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-message-batch-result common-lisp:nil
                       ((failed :initarg :failed :type
                         (common-lisp:or batch-result-error-entry-list
                                         common-lisp:null)
                         :accessor %delete-message-batch-result-failed
                         :initform (common-lisp:error ":failed is required"))
                        (successful :initarg :successful :type
                         (common-lisp:or delete-message-batch-result-entry-list
                                         common-lisp:null)
                         :accessor %delete-message-batch-result-successful
                         :initform
                         (common-lisp:error ":successful is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-message-batch-result
                    'make-delete-message-batch-result))
 (common-lisp:defun make-delete-message-batch-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failed successful)
   (common-lisp:apply #'common-lisp:make-instance 'delete-message-batch-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful))
      (common-lisp:list
       (common-lisp:cons "Successful"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed))
      (common-lisp:list
       (common-lisp:cons "Failed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-message-batch-result-entry common-lisp:nil
                       ((id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-message-batch-result-entry-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-message-batch-result-entry
                    'make-delete-message-batch-result-entry))
 (common-lisp:defun make-delete-message-batch-result-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key id)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-message-batch-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-batch-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype delete-message-batch-result-entry-list ()
   '(trivial-types:proper-list delete-message-batch-result-entry))
 (common-lisp:defun |make-delete-message-batch-result-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            delete-message-batch-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-message-request common-lisp:nil
                       ((receipt-handle :initarg :receipt-handle :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-message-request-receipt-handle :initform
                         (common-lisp:error ":receipt-handle is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-message-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-message-request 'make-delete-message-request))
 (common-lisp:defun make-delete-message-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key receipt-handle queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'delete-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receipt-handle))
      (common-lisp:list
       (common-lisp:cons "ReceiptHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-queue-request common-lisp:nil
                       ((queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %delete-queue-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'delete-queue-request 'make-delete-queue-request))
 (common-lisp:defun make-delete-queue-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'delete-queue-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition empty-batch-request
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'empty-batch-request)))
(common-lisp:progn
 (common-lisp:defclass get-queue-attributes-request common-lisp:nil
                       ((attribute-names :initarg :attribute-names :type
                         (common-lisp:or attribute-name-list common-lisp:null)
                         :accessor
                         %get-queue-attributes-request-attribute-names
                         :initform common-lisp:nil)
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-queue-attributes-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'get-queue-attributes-request
                    'make-get-queue-attributes-request))
 (common-lisp:defun make-get-queue-attributes-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attribute-names queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'get-queue-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-queue-attributes-result common-lisp:nil
                       ((attributes :initarg :attributes :type
                         (common-lisp:or queue-attribute-map common-lisp:null)
                         :accessor %get-queue-attributes-result-attributes
                         :initform common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-queue-attributes-result
                    'make-get-queue-attributes-result))
 (common-lisp:defun make-get-queue-attributes-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attributes)
   (common-lisp:apply #'common-lisp:make-instance 'get-queue-attributes-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-attributes-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-attributes-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-attributes-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-queue-url-request common-lisp:nil
                       ((queue-owner-awsaccount-id :initarg
                         :queue-owner-awsaccount-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-queue-url-request-queue-owner-awsaccount-id
                         :initform common-lisp:nil)
                        (queue-name :initarg :queue-name :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-queue-url-request-queue-name :initform
                         (common-lisp:error ":queue-name is required"))))
 (common-lisp:export
  (common-lisp:list 'get-queue-url-request 'make-get-queue-url-request))
 (common-lisp:defun make-get-queue-url-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queue-owner-awsaccount-id queue-name)
   (common-lisp:apply #'common-lisp:make-instance 'get-queue-url-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-url-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-url-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-name))
      (common-lisp:list
       (common-lisp:cons "QueueName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'queue-owner-awsaccount-id))
      (common-lisp:list
       (common-lisp:cons "QueueOwnerAWSAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-queue-url-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-queue-url-result common-lisp:nil
                       ((queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %get-queue-url-result-queue-url :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-queue-url-result 'make-get-queue-url-result))
 (common-lisp:defun make-get-queue-url-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'get-queue-url-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-queue-url-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-queue-url-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-queue-url-result))
   common-lisp:nil))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition invalid-attribute-name
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-attribute-name)))
(common-lisp:progn
 (common-lisp:define-condition invalid-batch-entry-id
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-batch-entry-id)))
(common-lisp:progn
 (common-lisp:define-condition invalid-id-format
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-id-format)))
(common-lisp:progn
 (common-lisp:define-condition invalid-message-contents
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-message-contents)))
(common-lisp:progn
 (common-lisp:defclass list-dead-letter-source-queues-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or boxed-integer common-lisp:null)
                         :accessor
                         %list-dead-letter-source-queues-request-max-results
                         :initform common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-dead-letter-source-queues-request-next-token
                         :initform common-lisp:nil)
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-dead-letter-source-queues-request-queue-url
                         :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'list-dead-letter-source-queues-request
                    'make-list-dead-letter-source-queues-request))
 (common-lisp:defun make-list-dead-letter-source-queues-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token queue-url)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-dead-letter-source-queues-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dead-letter-source-queues-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dead-letter-source-queues-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dead-letter-source-queues-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-dead-letter-source-queues-result common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-dead-letter-source-queues-result-next-token
                         :initform common-lisp:nil)
                        (queue-urls :initarg :|queueUrls| :type
                         (common-lisp:or queue-url-list common-lisp:null)
                         :accessor
                         %list-dead-letter-source-queues-result-queue-urls
                         :initform
                         (common-lisp:error ":queueurls is required"))))
 (common-lisp:export
  (common-lisp:list 'list-dead-letter-source-queues-result
                    'make-list-dead-letter-source-queues-result))
 (common-lisp:defun make-list-dead-letter-source-queues-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token queue-urls)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-dead-letter-source-queues-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dead-letter-source-queues-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dead-letter-source-queues-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-urls))
      (common-lisp:list
       (common-lisp:cons "queueUrls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dead-letter-source-queues-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-queue-tags-request common-lisp:nil
                       ((queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-queue-tags-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'list-queue-tags-request 'make-list-queue-tags-request))
 (common-lisp:defun make-list-queue-tags-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'list-queue-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-queue-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-queue-tags-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-queue-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-queue-tags-result common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %list-queue-tags-result-tags :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-queue-tags-result 'make-list-queue-tags-result))
 (common-lisp:defun make-list-queue-tags-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags)
   (common-lisp:apply #'common-lisp:make-instance 'list-queue-tags-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-queue-tags-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-queue-tags-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-queue-tags-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-queues-request common-lisp:nil
                       ((max-results :initarg :max-results :type
                         (common-lisp:or boxed-integer common-lisp:null)
                         :accessor %list-queues-request-max-results :initform
                         common-lisp:nil)
                        (next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-queues-request-next-token :initform
                         common-lisp:nil)
                        (queue-name-prefix :initarg :queue-name-prefix :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %list-queues-request-queue-name-prefix :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-queues-request 'make-list-queues-request))
 (common-lisp:defun make-list-queues-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key max-results next-token queue-name-prefix)
   (common-lisp:apply #'common-lisp:make-instance 'list-queues-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-queues-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-queues-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-name-prefix))
      (common-lisp:list
       (common-lisp:cons "QueueNamePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-queues-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-queues-result common-lisp:nil
                       ((next-token :initarg :next-token :type
                         (common-lisp:or token common-lisp:null) :accessor
                         %list-queues-result-next-token :initform
                         common-lisp:nil)
                        (queue-urls :initarg :queue-urls :type
                         (common-lisp:or queue-url-list common-lisp:null)
                         :accessor %list-queues-result-queue-urls :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-queues-result 'make-list-queues-result))
 (common-lisp:defun make-list-queues-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key next-token queue-urls)
   (common-lisp:apply #'common-lisp:make-instance 'list-queues-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-queues-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-queues-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-urls))
      (common-lisp:list
       (common-lisp:cons "QueueUrls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-queues-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass message common-lisp:nil
                       ((message-attributes :initarg :message-attributes :type
                         (common-lisp:or message-body-attribute-map
                                         common-lisp:null)
                         :accessor %message-message-attributes :initform
                         common-lisp:nil)
                        (md5of-message-attributes :initarg
                         :md5of-message-attributes :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-md5of-message-attributes :initform
                         common-lisp:nil)
                        (attributes :initarg :attributes :type
                         (common-lisp:or message-system-attribute-map
                                         common-lisp:null)
                         :accessor %message-attributes :initform
                         common-lisp:nil)
                        (body :initarg :body :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-body :initform common-lisp:nil)
                        (md5of-body :initarg :md5of-body :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-md5of-body :initform common-lisp:nil)
                        (receipt-handle :initarg :receipt-handle :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-receipt-handle :initform common-lisp:nil)
                        (message-id :initarg :message-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-message-id :initform common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defun make-message
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message-attributes
                     md5of-message-attributes attributes body md5of-body
                     receipt-handle message-id)
   (common-lisp:apply #'common-lisp:make-instance 'message
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'receipt-handle))
      (common-lisp:list
       (common-lisp:cons "ReceiptHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'md5of-body))
      (common-lisp:list
       (common-lisp:cons "MD5OfBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'md5of-message-attributes))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:deftype message-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype message-attribute-name-list ()
   '(trivial-types:proper-list message-attribute-name))
 (common-lisp:defun |make-message-attribute-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message-attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass message-attribute-value common-lisp:nil
                       ((data-type :initarg :data-type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-attribute-value-data-type :initform
                         (common-lisp:error ":data-type is required"))
                        (binary-list-values :initarg :binary-list-values :type
                         (common-lisp:or binary-list common-lisp:null)
                         :accessor %message-attribute-value-binary-list-values
                         :initform common-lisp:nil)
                        (string-list-values :initarg :string-list-values :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor %message-attribute-value-string-list-values
                         :initform common-lisp:nil)
                        (binary-value :initarg :binary-value :type
                         (common-lisp:or binary common-lisp:null) :accessor
                         %message-attribute-value-binary-value :initform
                         common-lisp:nil)
                        (string-value :initarg :string-value :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-attribute-value-string-value :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'message-attribute-value 'make-message-attribute-value))
 (common-lisp:defun make-message-attribute-value
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key data-type binary-list-values
                     string-list-values binary-value string-value)
   (common-lisp:apply #'common-lisp:make-instance 'message-attribute-value
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-value))
      (common-lisp:list
       (common-lisp:cons "StringValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-value))
      (common-lisp:list
       (common-lisp:cons "BinaryValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-list-values))
      (common-lisp:list
       (common-lisp:cons "StringListValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-list-values))
      (common-lisp:list
       (common-lisp:cons "BinaryListValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype message-body-attribute-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-message-body-attribute-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype message-body-system-attribute-map ()
   'common-lisp:hash-table)
 (common-lisp:defun |make-message-body-system-attribute-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype message-list () '(trivial-types:proper-list message))
 (common-lisp:defun |make-message-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition message-not-inflight
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'message-not-inflight)))
(common-lisp:progn
 (common-lisp:deftype message-system-attribute-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-message-system-attribute-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype message-system-attribute-name () 'common-lisp:string)
(common-lisp:deftype message-system-attribute-name-for-sends ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass message-system-attribute-value common-lisp:nil
                       ((data-type :initarg :data-type :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-system-attribute-value-data-type :initform
                         (common-lisp:error ":data-type is required"))
                        (binary-list-values :initarg :binary-list-values :type
                         (common-lisp:or binary-list common-lisp:null)
                         :accessor
                         %message-system-attribute-value-binary-list-values
                         :initform common-lisp:nil)
                        (string-list-values :initarg :string-list-values :type
                         (common-lisp:or string-list common-lisp:null)
                         :accessor
                         %message-system-attribute-value-string-list-values
                         :initform common-lisp:nil)
                        (binary-value :initarg :binary-value :type
                         (common-lisp:or binary common-lisp:null) :accessor
                         %message-system-attribute-value-binary-value :initform
                         common-lisp:nil)
                        (string-value :initarg :string-value :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %message-system-attribute-value-string-value :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'message-system-attribute-value
                    'make-message-system-attribute-value))
 (common-lisp:defun make-message-system-attribute-value
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key data-type binary-list-values
                     string-list-values binary-value string-value)
   (common-lisp:apply #'common-lisp:make-instance
                      'message-system-attribute-value
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-system-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-system-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-value))
      (common-lisp:list
       (common-lisp:cons "StringValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-value))
      (common-lisp:list
       (common-lisp:cons "BinaryValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-list-values))
      (common-lisp:list
       (common-lisp:cons "StringListValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-list-values))
      (common-lisp:list
       (common-lisp:cons "BinaryListValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-system-attribute-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition over-limit
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'over-limit)))
(common-lisp:progn
 (common-lisp:define-condition purge-queue-in-progress
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'purge-queue-in-progress)))
(common-lisp:progn
 (common-lisp:defclass purge-queue-request common-lisp:nil
                       ((queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %purge-queue-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'purge-queue-request 'make-purge-queue-request))
 (common-lisp:defun make-purge-queue-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'purge-queue-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input purge-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input purge-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input purge-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype queue-attribute-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-queue-attribute-map|
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype queue-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition queue-deleted-recently
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'queue-deleted-recently)))
(common-lisp:progn
 (common-lisp:define-condition queue-does-not-exist
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'queue-does-not-exist)))
(common-lisp:progn
 (common-lisp:define-condition queue-name-exists
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'queue-name-exists)))
(common-lisp:progn
 (common-lisp:deftype queue-url-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-queue-url-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition receipt-handle-is-invalid
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'receipt-handle-is-invalid)))
(common-lisp:progn
 (common-lisp:defclass receive-message-request common-lisp:nil
                       ((receive-request-attempt-id :initarg
                         :receive-request-attempt-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %receive-message-request-receive-request-attempt-id
                         :initform common-lisp:nil)
                        (wait-time-seconds :initarg :wait-time-seconds :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %receive-message-request-wait-time-seconds :initform
                         common-lisp:nil)
                        (visibility-timeout :initarg :visibility-timeout :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %receive-message-request-visibility-timeout :initform
                         common-lisp:nil)
                        (max-number-of-messages :initarg
                         :max-number-of-messages :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %receive-message-request-max-number-of-messages
                         :initform common-lisp:nil)
                        (message-attribute-names :initarg
                         :message-attribute-names :type
                         (common-lisp:or message-attribute-name-list
                                         common-lisp:null)
                         :accessor
                         %receive-message-request-message-attribute-names
                         :initform common-lisp:nil)
                        (attribute-names :initarg :attribute-names :type
                         (common-lisp:or attribute-name-list common-lisp:null)
                         :accessor %receive-message-request-attribute-names
                         :initform common-lisp:nil)
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %receive-message-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'receive-message-request 'make-receive-message-request))
 (common-lisp:defun make-receive-message-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key receive-request-attempt-id
                     wait-time-seconds visibility-timeout
                     max-number-of-messages message-attribute-names
                     attribute-names queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'receive-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          receive-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          receive-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-names))
      (common-lisp:list
       (common-lisp:cons "AttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-attribute-names))
      (common-lisp:list
       (common-lisp:cons "MessageAttributeNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-number-of-messages))
      (common-lisp:list
       (common-lisp:cons "MaxNumberOfMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'visibility-timeout))
      (common-lisp:list
       (common-lisp:cons "VisibilityTimeout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-time-seconds))
      (common-lisp:list
       (common-lisp:cons "WaitTimeSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'receive-request-attempt-id))
      (common-lisp:list
       (common-lisp:cons "ReceiveRequestAttemptId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          receive-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass receive-message-result common-lisp:nil
                       ((messages :initarg :messages :type
                         (common-lisp:or message-list common-lisp:null)
                         :accessor %receive-message-result-messages :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'receive-message-result 'make-receive-message-result))
 (common-lisp:defun make-receive-message-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key messages)
   (common-lisp:apply #'common-lisp:make-instance 'receive-message-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          receive-message-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          receive-message-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          receive-message-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-permission-request common-lisp:nil
                       ((label :initarg :label :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-permission-request-label :initform
                         (common-lisp:error ":label is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %remove-permission-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'remove-permission-request
                    'make-remove-permission-request))
 (common-lisp:defun make-remove-permission-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key label queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'remove-permission-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'label))
      (common-lisp:list
       (common-lisp:cons "Label"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-permission-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-message-batch-request common-lisp:nil
                       ((entries :initarg :entries :type
                         (common-lisp:or send-message-batch-request-entry-list
                                         common-lisp:null)
                         :accessor %send-message-batch-request-entries
                         :initform (common-lisp:error ":entries is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'send-message-batch-request
                    'make-send-message-batch-request))
 (common-lisp:defun make-send-message-batch-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key entries queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'send-message-batch-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entries))
      (common-lisp:list
       (common-lisp:cons "Entries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-message-batch-request-entry common-lisp:nil
                       ((message-group-id :initarg :message-group-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-request-entry-message-group-id
                         :initform common-lisp:nil)
                        (message-deduplication-id :initarg
                         :message-deduplication-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-request-entry-message-deduplication-id
                         :initform common-lisp:nil)
                        (message-system-attributes :initarg
                         :message-system-attributes :type
                         (common-lisp:or message-body-system-attribute-map
                                         common-lisp:null)
                         :accessor
                         %send-message-batch-request-entry-message-system-attributes
                         :initform common-lisp:nil)
                        (message-attributes :initarg :message-attributes :type
                         (common-lisp:or message-body-attribute-map
                                         common-lisp:null)
                         :accessor
                         %send-message-batch-request-entry-message-attributes
                         :initform common-lisp:nil)
                        (delay-seconds :initarg :delay-seconds :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %send-message-batch-request-entry-delay-seconds
                         :initform common-lisp:nil)
                        (message-body :initarg :message-body :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-request-entry-message-body
                         :initform
                         (common-lisp:error ":message-body is required"))
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-request-entry-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'send-message-batch-request-entry
                    'make-send-message-batch-request-entry))
 (common-lisp:defun make-send-message-batch-request-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message-group-id message-deduplication-id
                     message-system-attributes message-attributes delay-seconds
                     message-body id)
   (common-lisp:apply #'common-lisp:make-instance
                      'send-message-batch-request-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-request-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-request-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delay-seconds))
      (common-lisp:list
       (common-lisp:cons "DelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-system-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageSystemAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-deduplication-id))
      (common-lisp:list
       (common-lisp:cons "MessageDeduplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-group-id))
      (common-lisp:list
       (common-lisp:cons "MessageGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-request-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype send-message-batch-request-entry-list ()
   '(trivial-types:proper-list send-message-batch-request-entry))
 (common-lisp:defun |make-send-message-batch-request-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            send-message-batch-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass send-message-batch-result common-lisp:nil
                       ((failed :initarg :failed :type
                         (common-lisp:or batch-result-error-entry-list
                                         common-lisp:null)
                         :accessor %send-message-batch-result-failed :initform
                         (common-lisp:error ":failed is required"))
                        (successful :initarg :successful :type
                         (common-lisp:or send-message-batch-result-entry-list
                                         common-lisp:null)
                         :accessor %send-message-batch-result-successful
                         :initform
                         (common-lisp:error ":successful is required"))))
 (common-lisp:export
  (common-lisp:list 'send-message-batch-result
                    'make-send-message-batch-result))
 (common-lisp:defun make-send-message-batch-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key failed successful)
   (common-lisp:apply #'common-lisp:make-instance 'send-message-batch-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful))
      (common-lisp:list
       (common-lisp:cons "Successful"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed))
      (common-lisp:list
       (common-lisp:cons "Failed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-message-batch-result-entry common-lisp:nil
                       ((sequence-number :initarg :sequence-number :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-result-entry-sequence-number
                         :initform common-lisp:nil)
                        (md5of-message-system-attributes :initarg
                         :md5of-message-system-attributes :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-result-entry-md5of-message-system-attributes
                         :initform common-lisp:nil)
                        (md5of-message-attributes :initarg
                         :md5of-message-attributes :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-result-entry-md5of-message-attributes
                         :initform common-lisp:nil)
                        (md5of-message-body :initarg :md5of-message-body :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-result-entry-md5of-message-body
                         :initform
                         (common-lisp:error ":md5of-message-body is required"))
                        (message-id :initarg :message-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-result-entry-message-id :initform
                         (common-lisp:error ":message-id is required"))
                        (id :initarg :id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-batch-result-entry-id :initform
                         (common-lisp:error ":id is required"))))
 (common-lisp:export
  (common-lisp:list 'send-message-batch-result-entry
                    'make-send-message-batch-result-entry))
 (common-lisp:defun make-send-message-batch-result-entry
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sequence-number
                     md5of-message-system-attributes md5of-message-attributes
                     md5of-message-body message-id id)
   (common-lisp:apply #'common-lisp:make-instance
                      'send-message-batch-result-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-result-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-result-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'md5of-message-body))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'md5of-message-attributes))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'md5of-message-system-attributes))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageSystemAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sequence-number))
      (common-lisp:list
       (common-lisp:cons "SequenceNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-message-batch-result-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype send-message-batch-result-entry-list ()
   '(trivial-types:proper-list send-message-batch-result-entry))
 (common-lisp:defun |make-send-message-batch-result-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            send-message-batch-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass send-message-request common-lisp:nil
                       ((message-group-id :initarg :message-group-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-request-message-group-id :initform
                         common-lisp:nil)
                        (message-deduplication-id :initarg
                         :message-deduplication-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-request-message-deduplication-id
                         :initform common-lisp:nil)
                        (message-system-attributes :initarg
                         :message-system-attributes :type
                         (common-lisp:or message-body-system-attribute-map
                                         common-lisp:null)
                         :accessor
                         %send-message-request-message-system-attributes
                         :initform common-lisp:nil)
                        (message-attributes :initarg :message-attributes :type
                         (common-lisp:or message-body-attribute-map
                                         common-lisp:null)
                         :accessor %send-message-request-message-attributes
                         :initform common-lisp:nil)
                        (delay-seconds :initarg :delay-seconds :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         %send-message-request-delay-seconds :initform
                         common-lisp:nil)
                        (message-body :initarg :message-body :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-request-message-body :initform
                         (common-lisp:error ":message-body is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'send-message-request 'make-send-message-request))
 (common-lisp:defun make-send-message-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key message-group-id message-deduplication-id
                     message-system-attributes message-attributes delay-seconds
                     message-body queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'send-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delay-seconds))
      (common-lisp:list
       (common-lisp:cons "DelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-system-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageSystemAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-deduplication-id))
      (common-lisp:list
       (common-lisp:cons "MessageDeduplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-group-id))
      (common-lisp:list
       (common-lisp:cons "MessageGroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-message-result common-lisp:nil
                       ((sequence-number :initarg :sequence-number :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-result-sequence-number :initform
                         common-lisp:nil)
                        (message-id :initarg :message-id :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-result-message-id :initform
                         common-lisp:nil)
                        (md5of-message-system-attributes :initarg
                         :md5of-message-system-attributes :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-result-md5of-message-system-attributes
                         :initform common-lisp:nil)
                        (md5of-message-attributes :initarg
                         :md5of-message-attributes :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-result-md5of-message-attributes
                         :initform common-lisp:nil)
                        (md5of-message-body :initarg :md5of-message-body :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %send-message-result-md5of-message-body :initform
                         common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-message-result 'make-send-message-result))
 (common-lisp:defun make-send-message-result
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key sequence-number message-id
                     md5of-message-system-attributes md5of-message-attributes
                     md5of-message-body)
   (common-lisp:apply #'common-lisp:make-instance 'send-message-result
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-message-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-message-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'md5of-message-body))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'md5of-message-attributes))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'md5of-message-system-attributes))
      (common-lisp:list
       (common-lisp:cons "MD5OfMessageSystemAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sequence-number))
      (common-lisp:list
       (common-lisp:cons "SequenceNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-message-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-queue-attributes-request common-lisp:nil
                       ((attributes :initarg :attributes :type
                         (common-lisp:or queue-attribute-map common-lisp:null)
                         :accessor %set-queue-attributes-request-attributes
                         :initform
                         (common-lisp:error ":attributes is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %set-queue-attributes-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'set-queue-attributes-request
                    'make-set-queue-attributes-request))
 (common-lisp:defun make-set-queue-attributes-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key attributes queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'set-queue-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-queue-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-queue-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-queue-attributes-request))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun |make-tag-map| (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-queue-request common-lisp:nil
                       ((tags :initarg :tags :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         %tag-queue-request-tags :initform
                         (common-lisp:error ":tags is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %tag-queue-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'tag-queue-request 'make-tag-queue-request))
 (common-lisp:defun make-tag-queue-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tags queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'tag-queue-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-queue-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-entries-in-batch-request
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'too-many-entries-in-batch-request)))
(common-lisp:progn
 (common-lisp:define-condition unsupported-operation
     (sqs-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'unsupported-operation)))
(common-lisp:progn
 (common-lisp:defclass untag-queue-request common-lisp:nil
                       ((tag-keys :initarg :tag-keys :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor %untag-queue-request-tag-keys :initform
                         (common-lisp:error ":tag-keys is required"))
                        (queue-url :initarg :queue-url :type
                         (common-lisp:or string common-lisp:null) :accessor
                         %untag-queue-request-queue-url :initform
                         (common-lisp:error ":queue-url is required"))))
 (common-lisp:export
  (common-lisp:list 'untag-queue-request 'make-untag-queue-request))
 (common-lisp:defun make-untag-queue-request
                    (
                     common-lisp:&rest aws-sdk/generator/shape::args
                     common-lisp:&key tag-keys queue-url)
   (common-lisp:apply #'common-lisp:make-instance 'untag-queue-request
                      aws-sdk/generator/shape::args))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-queue-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-queue-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "QueueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-queue-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun add-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url label awsaccount-ids actions)
   (common-lisp:declare
    (common-lisp:ignorable queue-url label awsaccount-ids actions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "AddPermission"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'add-permission))
(common-lisp:progn
 (common-lisp:defun change-message-visibility
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url receipt-handle
                     visibility-timeout)
   (common-lisp:declare
    (common-lisp:ignorable queue-url receipt-handle visibility-timeout))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-change-message-visibility-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "ChangeMessageVisibility"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'change-message-visibility))
(common-lisp:progn
 (common-lisp:defun change-message-visibility-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url entries)
   (common-lisp:declare (common-lisp:ignorable queue-url entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-change-message-visibility-batch-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "ChangeMessageVisibilityBatch"
                                                        "2012-11-05"))
      common-lisp:nil "ChangeMessageVisibilityBatchResult" *error-map*)))
 (common-lisp:export 'change-message-visibility-batch))
(common-lisp:progn
 (common-lisp:defun create-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-name attributes tags)
   (common-lisp:declare (common-lisp:ignorable queue-name attributes tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "CreateQueue"
                                                        "2012-11-05"))
      common-lisp:nil "CreateQueueResult" *error-map*)))
 (common-lisp:export 'create-queue))
(common-lisp:progn
 (common-lisp:defun delete-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url receipt-handle)
   (common-lisp:declare (common-lisp:ignorable queue-url receipt-handle))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "DeleteMessage"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-message))
(common-lisp:progn
 (common-lisp:defun delete-message-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url entries)
   (common-lisp:declare (common-lisp:ignorable queue-url entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-message-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "DeleteMessageBatch"
                                                        "2012-11-05"))
      common-lisp:nil "DeleteMessageBatchResult" *error-map*)))
 (common-lisp:export 'delete-message-batch))
(common-lisp:progn
 (common-lisp:defun delete-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url)
   (common-lisp:declare (common-lisp:ignorable queue-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "DeleteQueue"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'delete-queue))
(common-lisp:progn
 (common-lisp:defun get-queue-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url attribute-names)
   (common-lisp:declare (common-lisp:ignorable queue-url attribute-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-queue-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "GetQueueAttributes"
                                                        "2012-11-05"))
      common-lisp:nil "GetQueueAttributesResult" *error-map*)))
 (common-lisp:export 'get-queue-attributes))
(common-lisp:progn
 (common-lisp:defun get-queue-url
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-name queue-owner-awsaccount-id)
   (common-lisp:declare
    (common-lisp:ignorable queue-name queue-owner-awsaccount-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-queue-url-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "GetQueueUrl"
                                                        "2012-11-05"))
      common-lisp:nil "GetQueueUrlResult" *error-map*)))
 (common-lisp:export 'get-queue-url))
(common-lisp:progn
 (common-lisp:defun list-dead-letter-source-queues
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable queue-url next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-dead-letter-source-queues-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "ListDeadLetterSourceQueues"
                                                        "2012-11-05"))
      common-lisp:nil "ListDeadLetterSourceQueuesResult" *error-map*)))
 (common-lisp:export 'list-dead-letter-source-queues))
(common-lisp:progn
 (common-lisp:defun list-queue-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url)
   (common-lisp:declare (common-lisp:ignorable queue-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-queue-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "ListQueueTags"
                                                        "2012-11-05"))
      common-lisp:nil "ListQueueTagsResult" *error-map*)))
 (common-lisp:export 'list-queue-tags))
(common-lisp:progn
 (common-lisp:defun list-queues
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-name-prefix next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable queue-name-prefix next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-queues-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "ListQueues"
                                                        "2012-11-05"))
      common-lisp:nil "ListQueuesResult" *error-map*)))
 (common-lisp:export 'list-queues))
(common-lisp:progn
 (common-lisp:defun purge-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url)
   (common-lisp:declare (common-lisp:ignorable queue-url))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-purge-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "PurgeQueue"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'purge-queue))
(common-lisp:progn
 (common-lisp:defun receive-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url attribute-names
                     message-attribute-names max-number-of-messages
                     visibility-timeout wait-time-seconds
                     receive-request-attempt-id)
   (common-lisp:declare
    (common-lisp:ignorable queue-url attribute-names message-attribute-names
     max-number-of-messages visibility-timeout wait-time-seconds
     receive-request-attempt-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-receive-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "ReceiveMessage"
                                                        "2012-11-05"))
      common-lisp:nil "ReceiveMessageResult" *error-map*)))
 (common-lisp:export 'receive-message))
(common-lisp:progn
 (common-lisp:defun remove-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url label)
   (common-lisp:declare (common-lisp:ignorable queue-url label))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "RemovePermission"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'remove-permission))
(common-lisp:progn
 (common-lisp:defun send-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url message-body delay-seconds
                     message-attributes message-system-attributes
                     message-deduplication-id message-group-id)
   (common-lisp:declare
    (common-lisp:ignorable queue-url message-body delay-seconds
     message-attributes message-system-attributes message-deduplication-id
     message-group-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "SendMessage"
                                                        "2012-11-05"))
      common-lisp:nil "SendMessageResult" *error-map*)))
 (common-lisp:export 'send-message))
(common-lisp:progn
 (common-lisp:defun send-message-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url entries)
   (common-lisp:declare (common-lisp:ignorable queue-url entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-message-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "SendMessageBatch"
                                                        "2012-11-05"))
      common-lisp:nil "SendMessageBatchResult" *error-map*)))
 (common-lisp:export 'send-message-batch))
(common-lisp:progn
 (common-lisp:defun set-queue-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url attributes)
   (common-lisp:declare (common-lisp:ignorable queue-url attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-queue-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "SetQueueAttributes"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'set-queue-attributes))
(common-lisp:progn
 (common-lisp:defun tag-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url tags)
   (common-lisp:declare (common-lisp:ignorable queue-url tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "TagQueue"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'tag-queue))
(common-lisp:progn
 (common-lisp:defun untag-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key queue-url tag-keys)
   (common-lisp:declare (common-lisp:ignorable queue-url tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sqs-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :query "/"
                                                        "UntagQueue"
                                                        "2012-11-05"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'untag-queue))
