;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/macie/api
  (:use)
  (:nicknames #:aws/macie)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/macie/api)
(common-lisp:progn
 (common-lisp:defclass macie-request (aws-sdk/request:request) common-lisp:nil
                       (:default-initargs :service "macie" :protocol :json))
 (common-lisp:export 'macie-request))
(common-lisp:progn
 (common-lisp:define-condition macie-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'macie-error))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("InternalException" . internal-exception)
    ("InvalidInputException" . invalid-input-exception)
    ("LimitExceededException" . limit-exceeded-exception)))
(common-lisp:deftype awsaccount-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (macie-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       access-denied-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message
                    'access-denied-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-member-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-member-account-request-"))
   (member-account-id (common-lisp:error ":memberaccountid is required") :type
    (common-lisp:or awsaccount-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-member-account-request
                    'make-associate-member-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-member-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-member-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-account-id))
      (common-lisp:list
       (common-lisp:cons "memberAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-member-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-s3resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-s3resources-request-"))
   (member-account-id common-lisp:nil :type
    (common-lisp:or awsaccount-id common-lisp:null))
   (s3resources (common-lisp:error ":s3resources is required") :type
    (common-lisp:or s3resources-classification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-s3resources-request
                    'make-associate-s3resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-s3resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-s3resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-account-id))
      (common-lisp:list
       (common-lisp:cons "memberAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3resources))
      (common-lisp:list
       (common-lisp:cons "s3Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-s3resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-s3resources-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-associate-s3resources-result-"))
   (failed-s3resources common-lisp:nil :type
    (common-lisp:or failed-s3resources common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-s3resources-result
                    'make-associate-s3resources-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-s3resources-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-s3resources-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-s3resources))
      (common-lisp:list
       (common-lisp:cons "failedS3Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-s3resources-result))
   common-lisp:nil))
(common-lisp:deftype bucket-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (classification-type (:copier common-lisp:nil)
      (:conc-name "struct-shape-classification-type-"))
   (one-time (common-lisp:error ":onetime is required") :type
    (common-lisp:or s3one-time-classification-type common-lisp:null))
   (continuous (common-lisp:error ":continuous is required") :type
    (common-lisp:or s3continuous-classification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'classification-type 'make-classification-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input classification-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input classification-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'one-time))
      (common-lisp:list
       (common-lisp:cons "oneTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'continuous))
      (common-lisp:list
       (common-lisp:cons "continuous"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input classification-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (classification-type-update (:copier common-lisp:nil)
      (:conc-name "struct-shape-classification-type-update-"))
   (one-time common-lisp:nil :type
    (common-lisp:or s3one-time-classification-type common-lisp:null))
   (continuous common-lisp:nil :type
    (common-lisp:or s3continuous-classification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'classification-type-update
                    'make-classification-type-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          classification-type-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          classification-type-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'one-time))
      (common-lisp:list
       (common-lisp:cons "oneTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'continuous))
      (common-lisp:list
       (common-lisp:cons "continuous"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          classification-type-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-member-account-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-member-account-request-"))
   (member-account-id (common-lisp:error ":memberaccountid is required") :type
    (common-lisp:or awsaccount-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-member-account-request
                    'make-disassociate-member-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-account-id))
      (common-lisp:list
       (common-lisp:cons "memberAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-member-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-s3resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-s3resources-request-"))
   (member-account-id common-lisp:nil :type
    (common-lisp:or awsaccount-id common-lisp:null))
   (associated-s3resources
    (common-lisp:error ":associateds3resources is required") :type
    (common-lisp:or s3resources common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-s3resources-request
                    'make-disassociate-s3resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-s3resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-s3resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-account-id))
      (common-lisp:list
       (common-lisp:cons "memberAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-s3resources))
      (common-lisp:list
       (common-lisp:cons "associatedS3Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-s3resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-s3resources-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-disassociate-s3resources-result-"))
   (failed-s3resources common-lisp:nil :type
    (common-lisp:or failed-s3resources common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-s3resources-result
                    'make-disassociate-s3resources-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-s3resources-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-s3resources-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-s3resources))
      (common-lisp:list
       (common-lisp:cons "failedS3Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-s3resources-result))
   common-lisp:nil))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failed-s3resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-failed-s3resource-"))
   (failed-item common-lisp:nil :type
    (common-lisp:or s3resource common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-s3resource 'make-failed-s3resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input failed-s3resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input failed-s3resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-item))
      (common-lisp:list
       (common-lisp:cons "failedItem"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input failed-s3resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype failed-s3resources ()
   '(trivial-types:proper-list failed-s3resource))
 (common-lisp:defun |make-failed-s3resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list failed-s3resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype field-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-exception
     (macie-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       internal-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'internal-exception-error-code
                    'internal-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-input-exception
     (macie-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       invalid-input-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-input-exception-message)
      (field-name :initarg :field-name :initform common-lisp:nil :reader
       invalid-input-exception-field-name)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception
                    'invalid-input-exception-error-code
                    'invalid-input-exception-message
                    'invalid-input-exception-field-name)))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (macie-error)
     ((error-code :initarg :error-code :initform common-lisp:nil :reader
       limit-exceeded-exception-error-code)
      (message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       limit-exceeded-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-error-code
                    'limit-exceeded-exception-message
                    'limit-exceeded-exception-resource-type)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-member-accounts-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-member-accounts-request-"))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-member-accounts-request
                    'make-list-member-accounts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-member-accounts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-member-accounts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-member-accounts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-member-accounts-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-member-accounts-result-"))
   (member-accounts common-lisp:nil :type
    (common-lisp:or member-accounts common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-member-accounts-result
                    'make-list-member-accounts-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-member-accounts-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-member-accounts-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-accounts))
      (common-lisp:list
       (common-lisp:cons "memberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-member-accounts-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-s3resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-s3resources-request-"))
   (member-account-id common-lisp:nil :type
    (common-lisp:or awsaccount-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-s3resources-request 'make-list-s3resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-s3resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-s3resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-account-id))
      (common-lisp:list
       (common-lisp:cons "memberAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-s3resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (list-s3resources-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-list-s3resources-result-"))
   (s3resources common-lisp:nil :type
    (common-lisp:or s3resources-classification common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-s3resources-result 'make-list-s3resources-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-s3resources-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-s3resources-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3resources))
      (common-lisp:list
       (common-lisp:cons "s3Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-s3resources-result))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (member-account (:copier common-lisp:nil)
      (:conc-name "struct-shape-member-account-"))
   (account-id common-lisp:nil :type
    (common-lisp:or awsaccount-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'member-account 'make-member-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input member-account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input member-account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input member-account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype member-accounts ()
   '(trivial-types:proper-list member-account))
 (common-lisp:defun |make-member-accounts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list member-account))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype prefix () 'common-lisp:string)
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype s3continuous-classification-type () 'common-lisp:string)
(common-lisp:deftype s3one-time-classification-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (s3resource (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3resource-"))
   (bucket-name (common-lisp:error ":bucketname is required") :type
    (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 's3resource 'make-s3resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3resource-classification (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3resource-classification-"))
   (bucket-name (common-lisp:error ":bucketname is required") :type
    (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (classification-type (common-lisp:error ":classificationtype is required")
    :type (common-lisp:or classification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3resource-classification
                    'make-s3resource-classification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3resource-classification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3resource-classification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'classification-type))
      (common-lisp:list
       (common-lisp:cons "classificationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3resource-classification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (s3resource-classification-update (:copier common-lisp:nil)
      (:conc-name "struct-shape-s3resource-classification-update-"))
   (bucket-name (common-lisp:error ":bucketname is required") :type
    (common-lisp:or bucket-name common-lisp:null))
   (prefix common-lisp:nil :type (common-lisp:or prefix common-lisp:null))
   (classification-type-update
    (common-lisp:error ":classificationtypeupdate is required") :type
    (common-lisp:or classification-type-update common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3resource-classification-update
                    'make-s3resource-classification-update))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          s3resource-classification-update))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          s3resource-classification-update))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "bucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prefix))
      (common-lisp:list
       (common-lisp:cons "prefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'classification-type-update))
      (common-lisp:list
       (common-lisp:cons "classificationTypeUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          s3resource-classification-update))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype s3resources () '(trivial-types:proper-list s3resource))
 (common-lisp:defun |make-s3resources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list s3resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype s3resources-classification ()
   '(trivial-types:proper-list s3resource-classification))
 (common-lisp:defun |make-s3resources-classification|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            s3resource-classification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype s3resources-classification-update ()
   '(trivial-types:proper-list s3resource-classification-update))
 (common-lisp:defun |make-s3resources-classification-update|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            s3resource-classification-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (update-s3resources-request (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-s3resources-request-"))
   (member-account-id common-lisp:nil :type
    (common-lisp:or awsaccount-id common-lisp:null))
   (s3resources-update (common-lisp:error ":s3resourcesupdate is required")
    :type (common-lisp:or s3resources-classification-update common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-s3resources-request
                    'make-update-s3resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-s3resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-s3resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-account-id))
      (common-lisp:list
       (common-lisp:cons "memberAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3resources-update))
      (common-lisp:list
       (common-lisp:cons "s3ResourcesUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-s3resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defstruct
     (update-s3resources-result (:copier common-lisp:nil)
      (:conc-name "struct-shape-update-s3resources-result-"))
   (failed-s3resources common-lisp:nil :type
    (common-lisp:or failed-s3resources common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-s3resources-result
                    'make-update-s3resources-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-s3resources-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-s3resources-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-s3resources))
      (common-lisp:list
       (common-lisp:cons "failedS3Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-s3resources-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun associate-member-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key member-account-id)
   (common-lisp:declare (common-lisp:ignorable member-account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-member-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateMemberAccount"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-member-account))
(common-lisp:progn
 (common-lisp:defun associate-s3resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key member-account-id s3resources)
   (common-lisp:declare (common-lisp:ignorable member-account-id s3resources))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-s3resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "AssociateS3Resources"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'associate-s3resources))
(common-lisp:progn
 (common-lisp:defun disassociate-member-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key member-account-id)
   (common-lisp:declare (common-lisp:ignorable member-account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-member-account-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisassociateMemberAccount"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-member-account))
(common-lisp:progn
 (common-lisp:defun disassociate-s3resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key member-account-id associated-s3resources)
   (common-lisp:declare
    (common-lisp:ignorable member-account-id associated-s3resources))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-s3resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "DisassociateS3Resources"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'disassociate-s3resources))
(common-lisp:progn
 (common-lisp:defun list-member-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-member-accounts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListMemberAccounts"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-member-accounts))
(common-lisp:progn
 (common-lisp:defun list-s3resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key member-account-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable member-account-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-s3resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "ListS3Resources"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'list-s3resources))
(common-lisp:progn
 (common-lisp:defun update-s3resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key member-account-id s3resources-update)
   (common-lisp:declare
    (common-lisp:ignorable member-account-id s3resources-update))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-s3resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'macie-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" :json "/"
                                                        "UpdateS3Resources"
                                                        "2017-12-19"))
      common-lisp:nil common-lisp:nil *error-map*)))
 (common-lisp:export 'update-s3resources))
